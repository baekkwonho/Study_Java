//주제: 클래스 블록과 .class 파일
package step01;

class Exam002 {}

/*
# 클래스
- 문법: class 클래스명 {}
- 명령어를 관리하기 쉽게 분류하기 위한 문법
- classification의 약자

# 클래스 작성법
- 유지보수가 쉽도록 파일 이름과 같게 한다.
- 파일 이름만 보더라도 해당 파일에 어떤 기능을 수행하는
  명령어가 들었는지 확인하기 쉽다.
- 한 파일에 여러 클래스를 정의할 수 있지만,
  유지보수가 쉽도록 가능한 한 파일 한 클래스를 정의하라!

# 클래스와 .class 파일의 관계
- 컴파일러는 클래스 한 개당 한 개의 .class 파일을 생성한다.
- .class 파일의 이름은 클래스 이름과 같다.
- .class 파일명은 소스 파일명과 상관없다.
*/

/*
컴파일
- javac.exe 프로그램을 사용하여 소스 파일을 컴파일 할 수 있다.
- javac.exe는 자바 컴파일러다.
- 자바 컴파일러는 컴파일할 때 소스 파일의 문자 집합이
  운영체제의 기본 문자 집합과 같다고 간주한다.
  Windows OS: MS949
  Mac OSX: UTF-8
- 만약 소스 파일이 운영체제의 기본 문자집합과 다르다면,
  컴파일할 때 -encoding 옵션을 사용하여
  소스 파일을 인코딩할 때 사용한 문자집합을
  컴파일러에게 알려줘야 한다.
  예) javac -encoding UTF-8 소스파일명
*/
