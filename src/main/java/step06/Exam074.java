// 주제: 패키지를 사용하여 클래스 분류하기
package step06;

public class Exam074 {
  public static void main(String[] args) {
    System.out.println("Hello, world!");
  }
}

/*
# 자바 패키지
- 자바 클래스 파일을 효과적으로 관리하기 위한 방법
- 클래스의 역할이나 기능에 따라 여러 패키지로 분산하여 관리한다.
- 패키지는 실제 디렉토리로 표현한다.
- 자바 소스 파일 최상단에 package 명령을 선언한다.
  예) package 패키지명;

# 패키지명
- 자바 패키지가 실제 디렉토리로 구현되기 때문에
  경로 형태로 패키지를 선언한다.
  예) package 패키지명.하위패키지명.하위패키지명;
- 패키지명은 보통 다른 개발자가 만든 패키지명과 같아서는 안되기 때문에
  절대적으로 유일한 이름을 사용한다.
  보통 인터넷 도메인 이름을 자바 패키지 이름으로 사용한다.
  단 계층 관리가 쉽도록 역순으로된 패키지 명을 사용한다.
  예) 도메인명: bitcamp.co.kr
  => 형식) kr.co.bitcamp.프로그램명.하위패키지명
  => 예) kr.co.bitcamp.crm.ui

# 패키지명과 소스 파일의 경로
- 소스 파일의 경로는 가능한 패키지 경로로 일치하게 하라!
  그래야 소스 파일을 관리하기 쉽다.

# 패키지명과 .class 파일의 경로
- .class 파일의 디렉토리 경로는 반드시 패키지 경로와 일치해야 한다.
  일치하지 않으면 실행할 때 해당 클래스를 찾을 수 없다.
  실행 오류가 발생한다.

# 패키지 클래스 컴파일하기
> javac -encoding UTF-8 -d bin src/step01/Exam003.java
1) bin 디렉토리 밑에 패키지명에 해당하는 디렉토리가 자동생성된다.
2) 그리고 그 디렉토리에 Exam003.class 파일을 생성한다.
   => bin/step01/Exam003.class

# 패키지 클래스 실행하기
> java -classpath 루트패키지가있는디렉토리경로 패키지명을포함한클래스명
예)
> java -classpath bin step01.Exam003
=> 주의!
  -classpath를 지정할 때,
  무소속 클래스인경우, 해당 클래스가 있는 디렉토리를 지정하면 되지만
  패키지에 소속된 클래스인 경우 반드시 루트패키지가 있는 경로를 지정해야 한다.
  클래스가 있는 경로를 지정해서는 안된다.

  클래스 이름을 지정할 때도 반드시 패키지명을 포함한 이름이어야 한다.
  패키지명을 구분할 때 구분자는 '/'가 아니라 '.'이다.

*/
